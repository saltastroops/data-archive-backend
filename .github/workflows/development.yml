# The Data Archive API Development Workflow
name: Data Archive API Development Workflow

# This workflow is triggered whenever there are new commits pushed to the development branch.
on:
  push:
    branches:
      - development

jobs:
  job1:
    # The job for building, testing and deploy the code inside the github virtual machine.
    name: Build, test and run the app on the github virtual machine
    # This job is executed on the Linux machine.
    runs-on: ubuntu-latest

    # The matrix strategy is used to specify the nodejs version to use for the node packages management.
    strategy:
      # In this case, nodejs version 10.x is used.
      # To include more versions, you can add them as follows: [8.x, 10.x, 12.x].
      matrix:
        node-version: [10.x]

    # The steps to be executed for this job.
    steps:
      # This step uses the checkout action to make sure the latest code is used.
      - name: Use the latest code
        uses: actions/checkout@v1
      # This step uses the setup-node action to setup the nodejs environment.
      - name: Setup the nodejs environment
        uses: actions/setup-node@v1
        # The setup-node action accepts parameters.
        # In this case, the nodejs version parameter specifying the version of nodejs to use is supplied.
        with:
          node-version: ${{ matrix.node-version }}
      # This specifies the commands to run after the build is done.
      # The first command is for installing the nodejs packages.
      # The second command is for executing the tests.
      - run: |
          yarn install
          yarn test
        shell: bash

  job2:
    # This job is only executed when job1 executed successfully
    needs: job1

    # The job for building, testing and deploy the code to the development server.
    name: Build, test and deploy on the development server
    # This job is executed on the Linux machine.
    runs-on: ubuntu-latest

    # The steps to be executed for this job.
    steps:
      # This step uses the checkout action to make sure the latest code is used.
      - name: Use the latest code
        uses: actions/checkout@v1
      # This step uses the ssh action to setup a ssh server used to ssh into the development server.
      - name: Ssh server
        uses: fifsky/ssh-action@master
        # The fifsky ssh action accepts parameters.
        # These parameters are secretly stored in GitHub secrete store.
        # In this case, the following parameters are supplied
        # key, the client ssh private key
        # pass, the client password
        # host, the host to ssh into
        # user, the host username to ssh into
        # port, the host port to ssh into
        # command, the command to be executed inside th sshed into host.
        with:
          key: ${{ secrets.SSH_MACHINE_PRIVATE_SSH_KEY }}
          host: ${{ secrets.SSH_MACHINE_HOST }}
          user: ${{ secrets.SSH_MACHINE_USER }}
          port: ${{ secrets.SSH_MACHINE_PORT }}
          pass: ${{ secrets.SSH_MACHINE_PASSWORD }}
          command: |
            pwd
            ssh -o StrictHostKeyChecking=no -tt ${{ secrets.TEST_USER}}@${{ secrets.TEST_HOST}} -p ${{ secrets.TEST_PORT}} """
              cd /home/ssda/data-archive-backend
              git checkout gitactions-featuredev-test
              git pull
              yarn install
              yarn test
              yarn restart
              exit
            """
#  job3:
#    # This job is only executed when job1 and job 2 are executed successfully
#    needs: job2
#
#    # The job for creating a pull request from the development to the master branch .
#    name: Create a pull request to update the master branch with the development branch
#    # This job is executed on the Linux machine.
#    runs-on: ubuntu-latest
#
#    # The steps to be executed for this job.
#    steps:
#      # This step uses the checkout action to make sure the latest code is used.
#      - name: Use the latest code
#        uses: actions/checkout@v1
#      # This step uses the ssh action to setup a ssh server used to ssh into the development server.
#      - name: Ssh server
#        uses: fifsky/ssh-action@master
#        # The fifsky ssh action accepts parameters.
#        # These parameters are secretly stored in GitHub secrete store.
#        # In this case, the following parameters are supplied
#        # key, the client ssh private key
#        # pass, the client password
#        # host, the host to ssh into
#        # user, the host username to ssh into
#        # port, the host port to ssh into
#        # command, the command to be executed inside th sshed into host.
#        with:
#          key: ${{ secrets.SSH_MACHINE_PRIVATE_SSH_KEY }}
#          host: ${{ secrets.SSH_MACHINE_HOST }}
#          user: ${{ secrets.SSH_MACHINE_USER }}
#          port: ${{ secrets.SSH_MACHINE_PORT }}
#          pass: ${{ secrets.SSH_MACHINE_PASSWORD }}
#          command: |
#            pwd
#            ssh -o StrictHostKeyChecking=no -tt ${{ secrets.TEST_USER}}@${{ secrets.TEST_HOST}} -p ${{ secrets.TEST_PORT}} """
#              cd /home/ssda/data-archive-backend
#              git checkout development
#              git request-pull master ./
#              exit
#            """